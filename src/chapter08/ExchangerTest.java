package chapter08;import java.util.concurrent.Exchanger;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;/** * @author tengfei.fangtf * @version $Id: ExchangerTest.java, v 0.1 2015-8-1 上午12:10:37 tengfei.fangtf Exp $ */public class ExchangerTest {    private static final Exchanger<String> exgr = new Exchanger<String>();    private static ExecutorService threadPool = Executors.newFixedThreadPool(2);    public static void main(String[] args) {        /**         * 改成传球更好一点         *///        threadPool.execute(new Runnable() {//            @Override//            public void run() {//                try {//                    String A = "A传的球";//                    String s = exgr.exchange(A);//                    System.out.println("A收到:" + s);//                } catch (InterruptedException e) {//                }//            }//        });////        threadPool.execute(new Runnable() {//            @Override//            public void run() {//                try {//                    String B = "B传的球";//                    String s = exgr.exchange(B);//                    System.out.println("B收到:" + s);//                } catch (InterruptedException e) {//                }//            }//        });        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    String A = "银行流水A";// A录入银行流水数据                    exgr.exchange(A);                } catch (InterruptedException e) {                }            }        });        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    String B = "银行流水B";// B录入银行流水数据                    String A = exgr.exchange("B");                    System.out.println("A和B数据是否一致：" + A.equals(B) + "，A录入的是：" + A + "，B录入是：" + B);                } catch (InterruptedException e) {                }            }        });        threadPool.shutdown();    }}